// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_2013_COMPILE


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );
sampler _Sampler_02		: register( s2 );
sampler _Sampler_03		: register( s3 );

// Constants
const float _g_Time		: register( c16 );

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = tex2D( _Sampler_00, In.vTexCoord_0 ).rgb;
	float3 _var1 = float3( 0.000000, 0.000000, 0.000000 );
	float2 _var2 = In.vTexCoord_0 - float( 0.500000 );
	float _var3 = _g_Time * float( -0.020000 );
	float _var4 = tex2D( _Sampler_01, In.vTexCoord_0 ).a;
	float2 _var5 = normalize( _var2 );
	float2 _var6 = float2( _var3.x, 0.000000 );
	float _var7 = length( _var2 );
	float _var8 = dot( _var5, float2( 0.000000, 1.000000 ) );
	float _var9 = dot( _var5, float2( 1.000000, 0.000000 ) );
	_var7 = smoothstep( float( 0.100000 ), float( 0.700000 ), _var7 );
	float2 _var10 = float2( _var8, _var9 );
	float _var11 = float( 0.500000 ) * _var8;
	_var10 = float( 0.600000 ) * _var10;
	_var11 = float( 0.500000 ) + _var11;
	{
		float2 center_def = float2( 0.5f, 0.5f );
		float rot_def = float( 0.0f );
		float2 trans_def = float2( 0.0f, 0.0f );
		float fs = sin( rot_def );
		float fc = cos( rot_def );
		float4 row_0 = float4( fc * float2( 0.500000, 1.000000 ).x, -fs * float2( 0.500000, 1.000000 ).x, 0, ( -center_def.x * fc + center_def.y * fs ) * float2( 0.500000, 1.000000 ).x + center_def.x + trans_def.x );
		float4 row_1 = float4( fs * float2( 0.500000, 1.000000 ).y, fc * float2( 0.500000, 1.000000 ).y, 0, ( -center_def.x * fs - center_def.y * fc ) * float2( 0.500000, 1.000000 ).y + center_def.y + trans_def.y );
		_var10.x = dot( float4( _var10, 0, 1 ), row_0 );
		_var10.y = dot( float4( _var10, 0, 1 ), row_1 );
	}
	float2 _var12 = _var10 + _var6;
	float2 _var13 = _var10 - _var6;
	float3 _var14 = tex2D( _Sampler_02, _var12 ).rgb;
	float3 _var15 = tex2D( _Sampler_02, _var13 ).rgb;
	_var14 = lerp( _var14, _var15, _var11 );
	float2 _var16 = _var14.xy;
	_var16 = _var16 - float( 0.500000 );
	_var16 = _var16 * _var7;
	_var16 = float( 0.030000 ) * _var16;
	_var16 = In.vTexCoord_0 + _var16;
	for ( int _var17 = 0; _var17 <= 3; _var17++ )
	{
		float2 _var18 = _var16;
		float _var19 = _var17 * float( 0.150000 );
		float _var20 = _var17 * float( 2.000000 );
		float _var21 = smoothstep( float( 0.000000 ), float( 2.000000 ), _var17 );
		float _var22 = smoothstep( float( 3.000000 ), float( 1.000000 ), _var17 );
		float _var23 = smoothstep( float( 2.000000 ), float( 0.000000 ), _var17 );
		float _var24 = _var17 * float( 0.200000 );
		_var18 = _var18 - float( 0.500000 );
		_var19 = pow( _var19, float( 1.500000 ) );
		_var20 = sin( _var20 );
		_var18 = _var18 * float( -1.000000 );
		_var19 = float( 1.000000 ) - _var19;
		_var20 = frac( _var20 );
		_var18 = _var18 * _var19;
		_var20 = _var20 * float( 0.500000 );
		_var18 = _var18 + float( 0.500000 );
		{
			float2 center_def = float2( 0.5f, 0.5f );
			float2 scale_def = float2( 1.0f, 1.0f );
			float2 trans_def = float2( 0.0f, 0.0f );
			float fs = sin( _var20 );
			float fc = cos( _var20 );
			float4 row_0 = float4( fc * scale_def.x, -fs * scale_def.x, 0, ( -center_def.x * fc + center_def.y * fs ) * scale_def.x + center_def.x + trans_def.x );
			float4 row_1 = float4( fs * scale_def.y, fc * scale_def.y, 0, ( -center_def.x * fs - center_def.y * fc ) * scale_def.y + center_def.y + trans_def.y );
			_var18.x = dot( float4( _var18, 0, 1 ), row_0 );
			_var18.y = dot( float4( _var18, 0, 1 ), row_1 );
		}
		float4 _texLookup_77 = tex2D( _Sampler_03, _var18 );
		float3 _var25 = _texLookup_77.rgb;
		float _var26 = _texLookup_77.r;
		float _var27 = _texLookup_77.g;
		float _var28 = _texLookup_77.b;
		_var26 = _var26 * _var21;
		_var27 = _var27 * _var22;
		_var28 = _var28 * _var23;
		float2 _var29 = float2( _var26, _var27 );
		float3 _var30 = float3( _var29, _var28 );
		_var25 = lerp( _var25, _var30, _var24 );
		_var25 = smoothstep( float( 0.200000 ), float( 0.650000 ), _var25 );
		_var1 = _var1 + _var25;
	}
	_var1 = _var1 / float( 60.000000 );
	_var0 = _var0 + _var1;
	float4 _var31 = float4( _var0, _var4 );
	Out.vColor_0 = _var31;
	return Out;
}